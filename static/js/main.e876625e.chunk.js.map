{"version":3,"sources":["utils/view.ts","utils/debug.ts","scenes/tetris/functions/settings.ts","utils/theme.ts","scenes/tetris/functions/shape.ts","scenes/tetris/functions/util.ts","scenes/tetris/functions/board.ts","scenes/tetris/functions/game.ts","scenes/tetris/functions/hook.ts","scenes/joystick/components/Button.tsx","scenes/joystick/components/keyboard.ts","scenes/joystick/components/ArrowPad.tsx","scenes/joystick/components/ButtonPad.tsx","scenes/joystick/components/OptionPad.tsx","scenes/joystick/components/Joystick.tsx","scenes/tetris/components/Board.tsx","scenes/tetris/components/Box.tsx","scenes/tetris/components/ShapePreview.tsx","scenes/tetris/components/Game.tsx","App.tsx","serviceWorker.js","index.js"],"names":["g","isWeb","styled","styledNative","location","window","search","isDebug","indexOf","Platform","OS","DebugContext","React","createContext","BOX_WIDTH","LINE_LENGTH","BOARD_LENGTH","SHAPE_QUEUE_LENGTH","GAME_THICK_INTERVAL","GAME_ROTATION_DIRECTION","themes","name","shapeColors","i","j","l","o","s","t","z","getThemeByName","theme","arguments","length","undefined","find","ThemeContext","chance","C","rotate90Left","points","newPoints","map","_ref","_x","x","y","bottomPoints","getFacePoints","originPoint","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","currentPoint","value","err","return","deltaX","deltaY","_ref2","coordinatesOn1stCuadrant","shapes","Object","keys","coordinates","0","1","objectSpread","2","3","_i","second","third","fourth","c","createShape","initial","boardLength","type","pickone","column","id","guid","version","line","position","createLine","lineLength","Array","fill","getRotatedCoordinates","shape","getNextPosition","currentPosition","translateLine","lines","getAbsoluteShapeCoordinates","_ref3","side","xsByXs","result","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_ref5","push","getYsByXs","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref7","getXsByYs","key","Math","max","apply","min","Number","isOffTheBoard","_ref8","rotatedXs","rc","minX","getShapeWidth","rotatedCoordinates","maxY","availableHeight","getShapeShownHeight","doesShapeCollidesWithFilledBoxAtSide","board","getShapeFacePoints","_ref9","currentPointColumn","currentPointRow","currentLine","box","partOfShape","createBoard","activeShape","from","previewBoards","shapeQueue","drawBoardLines","boardLines","toConsumableArray","coords","rowIndex","columnIndex","shapePartId","order","createGame","previous","gameOver","level","paused","score","ticks","useReducer","useEffect","useLayoutEffect","useState","useRef","initialGame","reduceGame","action","_prepareQueue","newQueue","slice","prepareQueue","_prepareQueue2","slicedToArray","newShapeQueue","oneForNow","collidesOneForNow","useOneForNow","newBoardLines","newLines","_simplifyLines","simplifiedLines","reduce","acc","isNotPartOfAFigure","fullLineDetected","concat","simplifyLines","_simplifyLines2","finalShapeQueue","floor","getLevelForLines","currentShape","adaptedShape","endDate","Date","startDate","payload","collidesActive","point","pointOffTheBoard","collision","pointBoxLine","pointBox","useTick","dispatchTick","getInterval","props","shouldUseLayoutEffect","tickCount","timeoutRef","cb","current","setTimeout","callbackRef","effectFunction","clearTimeout","createHandler","dispatch","e","preventDefault","createHandlers","d","BLAST","DOWN","LEFT","PAUSE","RESTART","RIGHT","ROTATE","THICK","useTetris","_useReducer","_useReducer2","game","getTickForLevel","handlers","_useState","_useState2","duration","setDuration","newDuration","getTime","Container","TouchableOpacity","alignItems","justifyContent","borderRadius","BUTTON_SIDE","borderWidth","height","width","ViewContainer","View","Caption","Text","fontSize","ButtonComponent","useContext","title","react_default","a","createElement","filterHandlers","keyHandlers","filter","k","String","keyHandler","runHandlers","throttle","keyEventHandlers","forEach","currentEvent","handler","useKeyDowns","listener","fh","addEventListener","removeEventListener","display","zIndex","HorizontalAxis","flexDirection","Joystick","up","right","left","down","ArrowPad_ViewContainer","Button","accessibilityLabel","onPress","ButtonPad_ViewContainer","OptionPad","select","start","OptionPad_ViewContainer","Joystick_ViewContainer","ArrowPad","components_OptionPad","ButtonPad","BoardComponent","flexWrap","border","backgroundColor","BoxComponent","Box_Container","Consumer","debug","ShapePreview","BoardContainer","Indicators","tetris","_ref$theme","_useTetris","_useTetris2","joystickHandlers","Provider","Game_Container","components_Joystick","Board","lineIndex","boxIndex","Box","previewBoard","components_ShapePreview","IndexPage","Game","Boolean","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oQAMMA,EAAuBC,IAAUC,IAASC,ICH1CC,EACc,qBAAXC,OAAyBA,OAAOD,SAAW,CAAEE,OAAQ,IAEvD,SAASC,IACd,QAAON,KAAgD,IAAtCG,EAASE,OAAOE,QAAQ,UAGpC,SAASP,IACd,MAAuB,QAAhBQ,IAASC,GAGX,IAAMC,EAAeC,IAAMC,cAAcN,KCZnCO,EAAYP,IAAY,GAAK,GAE7BQ,EAAc,GAEdC,EAAe,GACfC,EAAqB,EACrBC,EAAsB,IACtBC,EACX,YA+CWC,EAAkB,CAtCO,CACpCC,KAAM,UACNC,YAAa,CACXC,EAAG,SACHC,EAAG,SACHC,EAAG,SACHC,EAAG,OACHC,EAAG,QACHC,EAAG,QACHC,EAAG,SAI6B,CAClCR,KAAM,UACNC,YAAa,CACXC,EAAG,SACHC,EAAG,OACHC,EAAG,MACHC,EAAG,SACHC,EAAG,UACHC,EAAG,QACHC,EAAG,UAGyB,CAC9BR,KAAM,MACNC,YAAa,CACXC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,SCjDA,SAASC,IAAqD,IAAtCC,EAAsCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlB,UACjD,OAAOZ,EAAOe,KAAK,SAAAP,GAAC,OAAIA,EAAEP,OAASU,KAAUX,EAAO,GC4CtD,IDzCO,IAAMgB,EAAexB,IAAMC,cAAqBiB,sCEN1CO,EAAS,kBAAM,IAAIC,KDOnBC,EAAe,SAACC,GAG3B,IAAMC,EAAYD,EAAOE,IAAI,SAAAC,GAAA,IAAMC,EAAND,EAAGE,EAAH,MAAuB,CAAEA,GAAzBF,EAAUG,EAAuBA,EAAGF,KAE3DG,EAAeC,EAAcP,EAAW,UAC1CQ,EAAqBF,EAAa,GANkBG,GAAA,EAAAC,GAAA,EAAAC,OAAAlB,EAAA,IAOxD,QAAAmB,EAAAC,EAA2BP,EAA3BQ,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAyC,KAA9BS,EAA8BN,EAAAO,QAClCX,GAAeU,EAAad,EAAII,EAAYJ,KAC/CI,EAAcU,IATsC,MAAAE,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAaxD,IAAMW,EAASd,EAAYJ,EAAI,GAAKI,EAAYJ,EAAII,EAAYJ,EAC1DmB,EAASf,EAAYH,EAAI,GAAKG,EAAYH,EAAIG,EAAYH,EAEhE,OADeL,EAAUC,IAAI,SAAAuB,GAAA,IAAGpB,EAAHoB,EAAGpB,EAAGC,EAANmB,EAAMnB,EAAN,MAAe,CAAED,EAAGA,EAAIkB,EAAQjB,EAAGA,EAAIkB,MAIhEE,EAA6C,CACjD3C,EAAG,CAAC,CAAEsB,EAAG,EAAGC,EAAG,GAAK,CAAED,EAAG,EAAGC,EAAG,GAAK,CAAED,EAAG,EAAGC,EAAG,GAAK,CAAED,EAAG,EAAGC,EAAG,IAC/DtB,EAAG,CAAC,CAAEqB,EAAG,EAAGC,EAAG,GAAK,CAAED,EAAG,EAAGC,EAAG,GAAK,CAAED,EAAG,EAAGC,EAAG,GAAK,CAAED,EAAG,EAAGC,EAAG,IAC/DrB,EAAG,CAAC,CAAEoB,EAAG,EAAGC,EAAG,GAAK,CAAED,EAAG,EAAGC,EAAG,GAAK,CAAED,EAAG,EAAGC,EAAG,GAAK,CAAED,EAAG,EAAGC,EAAG,IAC/DpB,EAAG,CAAC,CAAEmB,EAAG,EAAGC,EAAG,GAAK,CAAED,EAAG,EAAGC,EAAG,GAAK,CAAED,EAAG,EAAGC,EAAG,GAAK,CAAED,EAAG,EAAGC,EAAG,IAC/DnB,EAAG,CAAC,CAAEkB,EAAG,EAAGC,EAAG,GAAK,CAAED,EAAG,EAAGC,EAAG,GAAK,CAAED,EAAG,EAAGC,EAAG,GAAK,CAAED,EAAG,EAAGC,EAAG,IAC/DlB,EAAG,CAAC,CAAEiB,EAAG,EAAGC,EAAG,GAAK,CAAED,EAAG,EAAGC,EAAG,GAAK,CAAED,EAAG,EAAGC,EAAG,GAAK,CAAED,EAAG,EAAGC,EAAG,IAC/DjB,EAAG,CAAC,CAAEgB,EAAG,EAAGC,EAAG,GAAK,CAAED,EAAG,EAAGC,EAAG,GAAK,CAAED,EAAG,EAAGC,EAAG,GAAK,CAAED,EAAG,EAAGC,EAAG,KAG3DqB,EAAuBC,OAAOC,KAClCH,GAGWI,EAA2C,CACtDC,EAAGL,EACHM,EAAEJ,OAAAK,EAAA,EAAAL,CAAA,GAAMF,GACRQ,EAAEN,OAAAK,EAAA,EAAAL,CAAA,GAAMF,GACRS,EAAEP,OAAAK,EAAA,EAAAL,CAAA,GAAMF,IAGVU,EAAA,EAAAA,EAAgBT,EAAhBlC,OAAA2C,IAAwB,CAAnB,IAAMrD,EAAK4C,EAAJS,GAEJC,EAAStC,EADD2B,EAAyB3C,IAEjCuD,EAAQvC,EAAasC,GACrBE,EAASxC,EAAauC,GAC5BR,EAAY,GAAG/C,GAAKsD,EACpBP,EAAY,GAAG/C,GAAKuD,EACpBR,EAAY,GAAG/C,GAAKwD,EAGtB,IAAMC,EAAI3C,IACH,SAAS4C,IAGP,IAFPC,EAEOlD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAF4B,GACnCmD,EACOnD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADOhB,EAERoE,EAAOJ,EAAEK,QAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MACtD,OAAOjB,OAAAK,EAAA,EAAAL,CAAA,CACLkB,OAAQ,EACRC,GAAIP,EAAEQ,KAAK,CAAEC,QAAS,IACtBC,KAAMP,EAAc,EACpBQ,SAAU,EACVP,QACGF,GAIA,SAASU,IAAqD,IAA1CC,EAA0C7D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA7BjB,EAEtC,OADc,IAAI+E,MAAMD,GAAYE,KAAK,IAC5BrD,IAAI,iBAAO,CAAE6C,GAAIP,EAAEQ,KAAK,CAAEC,QAAS,OAGlD,SAASO,EAAsBC,GAC7B,OAAO3B,EAAY2B,EAAMN,UAAUM,EAAMb,MAGpC,SAASc,EAAgBC,GAC9B,OAAQA,GACN,KAAK,EACH,MAAmC,cAA5BhF,EAA0C,EAAI,EACvD,KAAK,EACH,MAAmC,cAA5BA,EAA0C,EAAI,EACvD,KAAK,EACH,MAAmC,cAA5BA,EAA0C,EAAI,EACvD,QACE,MAAmC,cAA5BA,EAA0C,EAAI,GAIpD,SAASiF,EAAcC,EAAevD,GAC3C,OAAOuD,EAAQvD,EAGV,SAASwD,EAA4BL,GAO1C,OAN6BD,EAAsBC,GAExBvD,IAAI,SAAA6D,GAAA,IAAG1D,EAAH0D,EAAG1D,EAAGC,EAANyD,EAAMzD,EAAN,MAAe,CAC5CD,EAAGA,EAAIoD,EAAMX,OACbxC,EAAGA,EAAImD,EAAMP,QAuBV,SAAS1C,EAAcR,EAAiBgE,GAC7C,IAAMC,EACK,QAATD,GAA2B,WAATA,EApBtB,SAAmBhE,GACjB,IAAMkE,EAAiB,GADmBC,GAAA,EAAAC,GAAA,EAAAC,OAAA3E,EAAA,IAE1C,QAAA4E,EAAAC,EAAuBvE,EAAvBe,OAAAC,cAAAmD,GAAAG,EAAAC,EAAAtD,QAAAC,MAAAiD,GAAA,EAA+B,KAAAK,EAAAF,EAAAlD,MAAlBf,EAAkBmE,EAAlBnE,EAAGC,EAAekE,EAAflE,EACT4D,EAAO7D,KAAI6D,EAAO7D,GAAK,IAC5B6D,EAAO7D,GAAGoE,KAAKnE,IAJyB,MAAAe,GAAA+C,GAAA,EAAAC,EAAAhD,EAAA,YAAA8C,GAAA,MAAAI,EAAAjD,QAAAiD,EAAAjD,SAAA,WAAA8C,EAAA,MAAAC,GAM1C,OAAOH,EAciCQ,CAAU1E,GAXpD,SAAmBA,GACjB,IAAMkE,EAAiB,GADmBS,GAAA,EAAAC,GAAA,EAAAC,OAAAnF,EAAA,IAE1C,QAAAoF,EAAAC,EAAuB/E,EAAvBe,OAAAC,cAAA2D,GAAAG,EAAAC,EAAA9D,QAAAC,MAAAyD,GAAA,EAA+B,KAAAK,EAAAF,EAAA1D,MAAlBf,EAAkB2E,EAAlB3E,EAAGC,EAAe0E,EAAf1E,EACT4D,EAAO5D,KAAI4D,EAAO5D,GAAK,IAC5B4D,EAAO5D,GAAGmE,KAAKpE,IAJyB,MAAAgB,GAAAuD,GAAA,EAAAC,EAAAxD,EAAA,YAAAsD,GAAA,MAAAI,EAAAzD,QAAAyD,EAAAzD,SAAA,WAAAsD,EAAA,MAAAC,GAM1C,OAAOX,EAKqDe,CAAUjF,GAoBtE,OAhBe4B,OAAOC,KAAKoC,GAAQ/D,IAAI,SAAAgF,GACrC,MAAO,CACL7E,EACW,SAAT2D,GAA4B,UAATA,EACN,UAATA,EACEmB,KAAKC,IAAIC,MAAM,KAAMpB,EAAOiB,IAC5BC,KAAKG,IAAID,MAAM,KAAMpB,EAAOiB,IAC9BK,OAAOL,GACb5E,EACW,WAAT0D,GAA8B,QAATA,EACR,QAATA,EACEmB,KAAKC,IAAIC,MAAM,KAAMpB,EAAOiB,IAC5BC,KAAKG,IAAID,MAAM,KAAMpB,EAAOiB,IAC9BK,OAAOL,MA4BnB,SAASM,EAATC,EAAwCzB,EAAYP,GAAuB,IAAlDpD,EAAkDoF,EAAlDpF,EAAGC,EAA+CmF,EAA/CnF,EAC1B,OAAQ0D,GACN,IAAK,SACH,OAAO1D,GAAK,EACd,IAAK,OACH,OAAOD,GAAK,EACd,IAAK,QACH,OAAOA,EAAI9B,EAdV,SAAuBkF,GAC5B,IAAMiC,EAAYlC,EAAsBC,GAAOvD,IAAI,SAAAyF,GAAE,OAAIA,EAAGtF,IACtDuF,EAAOT,KAAKG,IAAID,MAAM,KAAMK,GAElC,OADaP,KAAKC,IAAIC,MAAM,KAAMK,GACpBE,EAUeC,CAAcpC,IAAUpD,EAAIoD,EAAMX,QAAU,EAEvE,IAAK,MACH,OACExC,EAAI9B,EA5BL,SAA6BiF,GAClC,IAAMqC,EAAqBtC,EAAsBC,GAC3CsC,EAAOZ,KAAKC,IAAIC,MAAM,KAAMS,EAAmB5F,IAAI,SAAAyF,GAAE,OAAIA,EAAGrF,KAAM,EAClE0F,EAAkBxH,EAAeiF,EAAMP,KAC7C,OAAI8C,EAAkBD,EACbC,EAEFD,EAqBkBE,CAAoBxC,IAAUnD,EAAImD,EAAMP,MAAQ,EAIzE,OAAO,EAGF,SAASgD,EACdC,EACA1C,EACAO,GAGA,YAqCOtE,IAnFF,SAA4B+D,EAAcO,GAE/C,OAAOxD,EAD4BsD,EAA4BL,GACdO,GA2CzBoC,CAAmB3C,EAAOO,GACpCrE,KAAK,SAAA0G,GAAmD,IAA7CC,EAA6CD,EAAhDhG,EAA0BkG,EAAsBF,EAAzB/F,EACrCkG,EAAc5C,EAAcuC,EAAMtC,MAAMpE,OAAQ8G,GACtD,GACEf,EAAc,CAAEnF,EAAGiG,EAAoBhG,EAAGiG,GAAmBvC,EAAMP,GAEnE,OAAO,EAET,GAAa,WAATO,EAAmB,CACrB,GAAIuC,EAAkBJ,EAAMtC,MAAMpE,OAChC,OAAO,EAGT,IAAMgH,EAAMN,EAAMtC,MAAM2C,EAAc,GAAGF,GACzC,SAAIG,EAAIC,aAAeD,EAAIC,YAAYjD,MAAMV,KAAOU,EAAMV,IAIrD,GAAa,SAATiB,EAAiB,CAC1B,GAAIuC,GAAmB,EACrB,OAAO,EAET,IAAME,EAAMN,EAAMtC,MAAM2C,GAAaF,EAAqB,GAC1D,YAA2B5G,IAApB+G,EAAIC,aACTD,EAAIC,YAAYjD,MAAMV,KAAOU,EAAMV,GAGhC,GAAa,UAATiB,EAAkB,CAC3B,GAAIsC,EAAqB,GAAKH,EAAMtC,MAAM2C,GAAa/G,OACrD,OAAO,EAET,IAAMgH,EAAMN,EAAMtC,MAAM2C,GAAaF,EAAqB,GAC1D,YAA2B5G,IAApB+G,EAAIC,aACTD,EAAIC,YAAYjD,MAAMV,KAAOU,EAAMV,GAIvC,OAAO,IExOX,IAAMP,EAAI3C,IACH,SAAS8G,IAGP,IAFPhE,EAEOnD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFOhB,EACd6E,EACO7D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADMjB,EAEb,MAAO,CACLqI,iBAAalH,EACbqD,GAAIP,EAAEQ,KAAK,CAAEC,QAAS,IACtBY,MAAOP,MAAMuD,KAAK,IAAIvD,MAAMX,IAAczC,IAAI,WAC5C,OAAOoD,MAAMuD,KAAK,IAAIvD,MAAMD,IAAanD,IAAI,iBAAO,CAClD6C,GAAIP,EAAEQ,KAAK,CAAEC,QAAS,SAG1B6D,cAAe,GACfC,WAAY,IA2BT,SAASC,EACdC,EACAL,GAEA,IAAKA,EACH,OAAOhF,OAAAsF,EAAA,EAAAtF,CAAIqF,GAEb,IAAME,EAASrD,EAA4B8C,GAE3C,OAAOK,EAAW/G,IAAI,SAACgD,EAAMkE,GAC3B,IAAMZ,EAAc5C,EAAcqD,EAAWxH,OAAQ2H,GACrD,OAAOlE,EAAKhD,IAAI,SAACuG,EAAKY,GAEpB,QAEE3H,IADAyH,EAAOxH,KAAK,SAAAQ,GAAA,IAAGE,EAAHF,EAAGE,EAAH,OAAAF,EAAMG,IAAckG,GAAenG,IAAMgH,IAErD,CACA,IAAMC,EAAczH,IAASmD,OAC7B,OAAOpB,OAAAK,EAAA,EAAAL,CAAA,GACF6E,EADL,CAEEC,YAAa,CACX3D,GAAIuE,EACJC,MAAO,EACP9D,MAAOmD,KAGN,OACLH,EAAIC,aACJD,EAAIC,YAAYjD,MAAMV,KAAO6D,EAAY7D,GAElCnB,OAAAK,EAAA,EAAAL,CAAA,GACF6E,EADL,CAEEC,iBAAahH,IAGVkC,OAAAK,EAAA,EAAAL,CAAA,GACF6E,OCxDJ,SAASe,GAAWC,GACzB,IAAMjF,EAAI3C,IACV,MAAO,CACLsG,MAAOQ,IACPe,UAAU,EACV3E,GAAIP,EAAEQ,KAAK,CAAEC,QAAS,IACtB0E,MAAO,EACP9D,MAAO,EACP+D,QAAQ,EACRH,WACAI,MAAO,EACPC,MAAO,OCvBHC,GAA6D3J,IAA7D2J,WAAYC,GAAiD5J,IAAjD4J,UAAWC,GAAsC7J,IAAtC6J,gBAAiBC,GAAqB9J,IAArB8J,SAAUC,GAAW/J,IAAX+J,OAEpDC,GAAoBZ,KAEpBa,GAA0B,SAACZ,EAAUa,GACzC,IAA0B,IAAtBb,EAASC,UAAqC,YAAhBY,EAAO1F,KAAoB,OAAO6E,EACpE,GAAIA,EAASG,QAA0B,UAAhBU,EAAO1F,KAAkB,OAAO6E,EACvD,OAAQa,EAAO1F,MACb,IAAK,QACH,OAAOhB,OAAAK,EAAA,EAAAL,CAAA,GACF6F,EADL,CAEEG,QAASH,EAASG,SAGtB,IAAK,OACL,IAAK,QAAS,IAAAW,EJoPX,SAAsBpC,GAE3B,IADA,IAAMqC,EAAQ5G,OAAAsF,EAAA,EAAAtF,CAAOuE,EAAMY,YAClBhI,EAAIoH,EAAMY,WAAWtH,OAAQV,EAAIN,EAAoBM,IAC5DyJ,EAASzJ,GAAK0D,EAAY,GAAI0D,EAAMtC,MAAMpE,QAE5C,MAAO,CAAC+I,EAASC,MAAM,GAAID,EAAS,IIxPGE,CAAajB,EAAStB,OAD7CwC,EAAA/G,OAAAgH,EAAA,EAAAhH,CAAA2G,EAAA,GACLM,EADKF,EAAA,GACUG,EADVH,EAAA,GAENI,EAAoB7C,EACxBuB,EAAStB,MACT2C,EACA,UAEElC,EAAca,EAAStB,MAAMS,YAC7BoC,GAAe,EACfC,EAAgBxB,EAAStB,MAAMtC,MAC/BqF,EAAW,EACf,GAAItC,EAQF,KAPuBA,GACnBV,EACEuB,EAAStB,MACTS,EACA,UAKC,CACLA,OAAclH,EADT,IAAAyJ,EFnBR,SAAuBhD,GAC5B,IAAIiD,EAAkB,EAWtB,MAAO,CAVUjD,EAAMtC,MAAMwF,OAC3B,SAACC,EAAKpG,GACJ,OARN,SAA0BA,GACxB,YAAqDxD,IAA9CwD,EAAKvD,KAAK,SAAA8G,GAAG,OALtB,SAA4BA,GAC1B,OAAQA,EAAIC,cAAgBD,EAAIC,YAAY3D,GAIpBwG,CAAmB9C,KAOnC+C,CAAiBtG,IACnBkG,IACA,CAAQhG,KAARqG,OAAA7H,OAAAsF,EAAA,EAAAtF,CAAyB0H,EAAIb,WAE/B,GAAAgB,OAAA7H,OAAAsF,EAAA,EAAAtF,CAAW0H,GAAX,CAAgBpG,KAElB,IAEgBkG,GESmBM,CAAcjC,EAAStB,OAF/CwD,EAAA/H,OAAAgH,EAAA,EAAAhH,CAAAuH,EAAA,GAEHF,EAFGU,EAAA,GAEYT,EAFZS,EAAA,QADL/C,EAAWhF,OAAAK,EAAA,EAAAL,CAAA,GAAQgF,EAAR,CAAqB1D,KAAM0D,EAAY1D,KAAO,SAO3D8F,KADApC,EAAemC,OAAgCrJ,EAAZoJ,IACNlC,EAAY7D,KAAO+F,EAAU/F,GAE5D,IAAM6G,EAAkBZ,EACpBH,EADgC,CAE/BC,GAF+BW,OAAA7H,OAAAsF,EAAA,EAAAtF,CAEjBiH,EAAcJ,MAAM,EAAGI,EAAcpJ,UAClDoE,EAAQ4D,EAAS5D,MAAQqF,EACzBvB,EDzDL,SAA0B9D,GAC/B,OAAOsB,KAAK0E,MAAMhG,EAAQ,GAAK,ECwDbiG,CAAiBjG,GAE/B,OAAOjC,OAAAK,EAAA,EAAAL,CAAA,GACF6F,EADL,CAEEtB,MAAMvE,OAAAK,EAAA,EAAAL,CAAA,GACD6F,EAAStB,MADT,CAEHS,cACA/C,MAAOmD,EAAeiC,EAAerC,GACrCE,cAAe8C,EAAgB1J,IAAI,SAAA6J,GACjC,IAAM5D,EAAQQ,EAAY,EAAG,GACvBqD,EAAmBpI,OAAAK,EAAA,EAAAL,CAAA,GACpBmI,EADoB,CAEvBjH,OAAQ,EACRI,KAAM,IAER,OAAOtB,OAAAK,EAAA,EAAAL,CAAA,GACFuE,EADL,CAEEtC,MAAOmD,EAAeb,EAAMtC,MAAOmG,OAGvCjD,WAAY6C,IAEdK,aACkBvK,IAAhBkH,GAA6BmC,EACzB,IAAImB,UACJxK,EACNgI,gBAA0BhI,IAAhBkH,IAA6BmC,GACvCpB,QACA9D,QACAsG,UAA8B,IAAnB1C,EAASK,MAAc,IAAIoC,KAASzC,EAAS0C,UACxDrC,MAAOQ,EAAO8B,QAAU7E,OAAO+C,EAAO8B,SAAW3C,EAASK,QAG9D,IAAK,QACH,IAAIlB,EAAca,EAAStB,MAAMS,YACjC,IAAKA,EAAa,OAAOa,EAMzB,IALA,IAAI4C,EAAiBnE,EACnBuB,EAAStB,MACTS,EACA,WAEMyD,GACNzD,EAAWhF,OAAAK,EAAA,EAAAL,CAAA,GACNgF,EADM,CAET1D,KAAM0D,EAAY1D,KAAO,IAG3BmH,EAAiBnE,EACfuB,EAAStB,MACTS,EACA,UAIJ,OAAOhF,OAAAK,EAAA,EAAAL,CAAA,GACF6F,EADL,CAEEtB,MAAMvE,OAAAK,EAAA,EAAAL,CAAA,GACD6F,EAAStB,MADT,CAEHS,cACA/C,MAAOmD,EAAeS,EAAStB,MAAMtC,MAAO+C,OAIlD,IAAK,OACH,IAAKa,EAAStB,MAAMS,YAClB,OAAOa,EAET,IAAMb,EAAWhF,OAAAK,EAAA,EAAAL,CAAA,GACZ6F,EAAStB,MAAMS,YADH,CAEf9D,OAASoD,EACPuB,EAAStB,MACTsB,EAAStB,MAAMS,YACf,QAGEa,EAAStB,MAAMS,YAAY9D,OAD3B2E,EAAStB,MAAMS,YAAY9D,OAAS,IAG1C,OAAOlB,OAAAK,EAAA,EAAAL,CAAA,GACF6F,EADL,CAEEtB,MAAMvE,OAAAK,EAAA,EAAAL,CAAA,GACD6F,EAAStB,MADT,CAEHS,cACA/C,MAAOmD,EAAeS,EAAStB,MAAMtC,MAAO+C,OAIlD,IAAK,QACH,IAAKa,EAAStB,MAAMS,YAClB,OAAOa,EAET,IAAMb,EAAWhF,OAAAK,EAAA,EAAAL,CAAA,GACZ6F,EAAStB,MAAMS,YADH,CAEf9D,OAASoD,EACPuB,EAAStB,MACTsB,EAAStB,MAAMS,YACf,SAGEa,EAAStB,MAAMS,YAAY9D,OAD3B2E,EAAStB,MAAMS,YAAY9D,OAAS,IAG1C,OAAOlB,OAAAK,EAAA,EAAAL,CAAA,GACF6F,EADL,CAEEtB,MAAMvE,OAAAK,EAAA,EAAAL,CAAA,GACD6F,EAAStB,MADT,CAEHS,cACA/C,MAAOmD,EAAeS,EAAStB,MAAMtC,MAAO+C,OAIlD,IAAK,SAEH,IAAKa,EAAStB,MAAMS,YAClB,OAAOa,EAET,IAAMb,EAAWhF,OAAAK,EAAA,EAAAL,CAAA,GACZ6F,EAAStB,MAAMS,YADH,CAIfzD,SAAUO,EAAgB+D,EAAStB,MAAMS,YAAYzD,YAMvD,OJ0DJgD,EI7DMsB,EAAStB,WJqFRzG,IApBkBoE,EAHzBL,EI7DMmD,GJiEkBjH,KAAK,SAAA2K,GAC3B,IAEMC,EAFgB,CAAC,OAAQ,QAAS,SAAU,OAEnB5K,KAAK,SAAAqE,GAClC,OAAOwB,EAAc8E,EAAOtG,EAAMP,KAEhC+G,GAAY,EACVC,EAAetE,EAAMtC,MAAMD,EAAcpF,EAAc8L,EAAMhK,IACnE,GAAImK,EAAc,CAChB,IAAMC,EAAWD,EAAaH,EAAMjK,GAEpCmK,OACe9K,IAAbgL,QACyBhL,IAAzBgL,EAAShE,kBACsBhH,IAA/BgL,EAAShE,YAAYjD,YACa/D,IAAlCgL,EAAShE,YAAYjD,MAAMV,IAC3B2H,EAAShE,YAAYjD,MAAMV,KAAOU,EAAMV,GAE5C,QAAOwH,KAA0BC,KIhFtB/C,EAKF7F,OAAAK,EAAA,EAAAL,CAAA,GACF6F,EADL,CAEEtB,MAAMvE,OAAAK,EAAA,EAAAL,CAAA,GACD6F,EAAStB,MADT,CAEHS,cACA/C,MAAOmD,EAAeS,EAAStB,MAAMtC,MAAO+C,OAIlD,IAAK,UAEH,OAAOY,GAAWC,GAEpB,QAEE,OAAOA,EJoCN,IACLtB,EACA1C,GIjCIkH,GAAU,SACdC,EACAC,EACAC,GAEG,IADHC,EACGvL,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACCwL,EAAY,EACVC,EAAa9C,GAA8B,MAE3C+C,EAAK,WACTN,IAAeI,GACfC,EAAWE,QAAUC,WAAW,kBAAMC,EAAYF,WAAWN,MAGzDQ,EAAclD,GAAmB+C,GAEvClD,GAAU,WACRqD,EAAYF,QAAUD,IAGxB,IAAII,EAAiBtD,GACjB+C,IACFO,EAAiBrD,IAEnBqD,EAAe,WAEb,OADAL,EAAWE,QAAUC,WAAW,kBAAMC,EAAYF,WAAWN,KACtD,kBACLI,EAAWE,QAAUI,aAAaN,EAAWE,cAAWzL,IACzDoL,IAGCU,GAAgB,SACpB5I,EACA6I,GAFoB,OAGD,WAAoCjM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,OAAlBkM,EAAkBlM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,QAAdE,EACrCgM,GAAiC,oBAArBA,EAAEC,gBAChBD,EAAEC,iBAEJF,EAAS,CAAE7I,WAGPgJ,GAAiC,SAAAC,GAAC,MAAK,CAC3CC,MAAON,GAAc,QAASK,GAC9BE,KAAMP,GAAc,OAAQK,GAC5BG,KAAMR,GAAc,OAAQK,GAC5BI,MAAOT,GAAc,QAASK,GAC9BK,QAASV,GAAc,UAAWK,GAClCM,MAAOX,GAAc,QAASK,GAC9BO,OAAQZ,GAAc,SAAUK,GAChCQ,MAAOb,GAAc,QAASK,KAGzB,SAASS,KAAsC,IAAAC,EAC3BxE,GACvBM,GACAD,GACA,kBAAMA,KAJ4CoE,EAAA5K,OAAAgH,EAAA,EAAAhH,CAAA2K,EAAA,GAC7CE,EAD6CD,EAAA,GACvCf,EADuCe,EAAA,GAOpD7B,GACE,SAAAvL,GAAC,OAAIqM,EAAS,CAAE7I,KAAM,QAASwH,QAAShL,KACxC,kBDxQG,SAAyBuI,GAC9B,QAAQ,GACN,KAAe,IAAVA,EACH,OAAO,IACT,KAAe,IAAVA,EACH,OAAO,IACT,KAAe,IAAVA,EACH,OAAO,IACT,KAAe,IAAVA,EACH,OAAO,IACT,KAAe,IAAVA,EACH,OAAO,GACT,QACE,OAAOjJ,GAAuBiJ,EAAQ,IC2PlC+E,CAAgBD,EAAK9E,QAC3B,CAAC8E,EAAK9E,QAGR,IAAMgF,EAAWf,GAAeH,GAboBmB,EAepB1E,GAAS,GAfW2E,EAAAjL,OAAAgH,EAAA,EAAAhH,CAAAgL,EAAA,GAe7CE,EAf6CD,EAAA,GAenCE,EAfmCF,EAAA,GAgCpD,OAhBAlC,GACE,WACE,IAAMqC,EACJP,EAAKxC,SAAWwC,EAAKtC,UACjBhF,KAAK0E,OACF4C,EAAKxC,QAAQgD,UAAYR,EAAKtC,UAAU8C,WAAa,KAExDR,EAAKtC,UACLhF,KAAK0E,QAAO,IAAIK,MAAO+C,UAAYR,EAAKtC,UAAU8C,WAAa,KAC/D,EACDR,EAAK7E,QAAQmF,EAAYC,IAEhC,kBAAM,KACN,CAACP,EAAKtC,UAAWsC,EAAKxC,QAASwC,EAAK7E,SAG/B,CAAC6E,EAAMK,EAAUH,gBCrQpBO,GAAY1P,EAAE2P,KAAF3P,CAChB,CACE4P,WAAY,SACZC,eAAgB,UAElB,SAAAlN,KAAGZ,MAAH,IAAUqD,EAAVzC,EAAUyC,KAAV,MAAsB,CACpB0K,aACW,WAAT1K,EAAoB2K,GAA2B,SAAT3K,EAAkB,GAAK,EAC/D4K,YAAa,EACbC,OAAiB,SAAT7K,EAAkB2K,GAXV,GAYhBG,MAZgB,MAgBdC,GAAgBnQ,EAAEoQ,IAAFpQ,CAA0B,GAAI,SAAAiE,KAAGlC,MAAH,MAAgB,KAE9DsO,GAAUrQ,EAAEsQ,IAAFtQ,CAA4C,GAAI,SAAAuG,GAAA,MAAe,CAC7EgK,SAAmB,SAD2ChK,EAAGnB,KACrC,EAAI,MAGnBoL,GArCoC,SAAClD,GAClD,IAAMvL,EAAQ0O,qBAAWrO,GACjBsO,EAAUpD,EAAVoD,MACFtL,EAAOkI,EAAMlI,MAAQ,SAC3B,OACEuL,EAAAC,EAAAC,cAACnB,GAADtL,OAAAK,EAAA,EAAAL,CAAA,GAAoBkJ,EAApB,CAA2BvL,QAAOqD,KAAMA,GAAQ,WAC9CuL,EAAAC,EAAAC,cAACV,GAAD,CAAepO,MAAOA,GACpB4O,EAAAC,EAAAC,cAACR,GAAD,CAAStO,MAAOA,EAAOqD,KAAMA,GAC1BsL,gBChBLI,GAAiB,SACrBC,EACA7C,GAOA,OALyB6C,EACtBC,OAAO,SAAArO,GAAA,YACkCT,IADlCS,EAAG0B,KACJlC,KAAK,SAAA8O,GAAC,OAAIC,OAAOD,KAAO/C,EAAExG,QAEhChF,IAAI,SAAAyO,GAAU,MAAK,CAAEA,aAAYjD,QAIhCkD,GAAcC,oBAClB,SAACC,EAAqCpD,GACpCoD,EAAiBC,QAAQ,SAAAtN,GAAqC,IAAlCkN,EAAkClN,EAAlCkN,WAAeK,EAAmBvN,EAAtBiK,EACtCiD,EAAWM,QAAQD,EAAa9J,IAAKwG,MAGzC,KAOK,SAASwD,GAAYX,GAC1BvG,oBAAU,WACR,IAAMmH,EAAW,SAACzD,GAChB,IAAM0D,EAAKd,GAAeC,EAAa7C,GACnC0D,EAAG3P,OAAS,GACdmP,GAAYQ,EAAI1D,IAMpB,OAHIjO,KACFI,OAAOwR,iBAAiB,UAAWF,GAE9B,kBACL1R,IAAUI,OAAOyR,oBAAoB,UAAWH,QAAYzP,IAC7D,ICpCL,IAyDMiO,GAAgBnQ,EAAEoQ,IAAFpQ,CACpB,CACE4P,WAAY,SACZmC,QAAS,OACTC,OAAQ,GAEV,SAAArP,KAAGZ,MAAH,MAAgB,KAEZkQ,GAAiBjS,EAAEoQ,IAAFpQ,CAAQ,CAC7B4P,WAAY,SACZmC,QAAS,OACTG,cAAe,QAGFC,GAvEE,SAAC7E,GAChB,IAAMvL,EAAQ0O,qBAAWrO,GAEjB+M,EAAa7B,EAAb6B,SAqBR,OAnBAuC,GAAY,CACV,CACED,QAAStC,EAASiD,GAClB/N,KAAM,CAAC,UAAW,MAEpB,CACEoN,QAAStC,EAASkD,MAClBhO,KAAM,CAAC,aAAc,MAEvB,CACEoN,QAAStC,EAASmD,KAClBjO,KAAM,CAAC,YAAa,MAEtB,CACEoN,QAAStC,EAASoD,KAClBlO,KAAM,CAAC,YAAa,QAKtBsM,EAAAC,EAAAC,cAAC2B,GAAD,CAAezQ,MAAOA,GACpB4O,EAAAC,EAAAC,cAAC4B,GAAD,CACEC,mBAAmB,KACnBhC,MAAO,SACPiC,QAAS,kBAAMxD,EAASiD,QAE1BzB,EAAAC,EAAAC,cAACoB,GAAD,KACEtB,EAAAC,EAAAC,cAAC4B,GAAD,CACEC,mBAAmB,cACnBhC,MAAO,SACPiC,QAAS,kBAAMxD,EAASmD,UAE1B3B,EAAAC,EAAAC,cAAC4B,GAAD,CACEC,mBAAmB,SACnBhC,MAAO,IACPiC,QAAS,eAEXhC,EAAAC,EAAAC,cAAC4B,GAAD,CACEC,mBAAmB,QACnBhC,MAAO,SACPiC,QAAS,kBAAMxD,EAASkD,YAG5B1B,EAAAC,EAAAC,cAAC4B,GAAD,CACEC,mBAAmB,OACnBhC,MAAO,SACPiC,QAAS,kBAAMxD,EAASoD,YCb1BpC,GAAgBnQ,EAAEoQ,IAAFpQ,CACpB,CACE+R,QAAS,OACTG,cAAe,OAEjB,SAAAvP,KAAGZ,MAAH,MAAgB,KAGHoQ,GAzCE,SAAC7E,GAChB,IAAMvL,EAAQ0O,qBAAWrO,GACjB+M,EAAa7B,EAAb6B,SAaR,OAXAuC,GAAY,CACV,CACED,QAAStC,EAAStM,EAClBwB,KAAM,CAAC,IAAK,MAEd,CACEoN,QAAStC,EAASrM,EAClBuB,KAAM,CAAC,IAAK,QAKdsM,EAAAC,EAAAC,cAAC+B,GAAD,CAAe7Q,MAAOA,GACpB4O,EAAAC,EAAAC,cAAC4B,GAAD,CACEC,mBAAmB,WACnBhC,MAAM,IACNtL,KAAK,SACLuN,QAAS,kBAAMxD,EAAStM,OAE1B8N,EAAAC,EAAAC,cAAC4B,GAAD,CACEC,mBAAmB,WACnBhC,MAAM,IACNtL,KAAK,SACLuN,QAAS,kBAAMxD,EAASrM,SCC1BqN,GAAgBnQ,EAAEoQ,IAAFpQ,CACpB,CACE+R,QAAS,OACTG,cAAe,MACfjC,OAAQ,IAEV,SAAAtN,KAAGZ,MAAH,MAAgB,KAGH8Q,GA1CG,SAACvF,GACjB,IAAMvL,EAAQ0O,qBAAWrO,GACjB+M,EAAa7B,EAAb6B,SAaR,OAXAuC,GAAY,CACV,CACED,QAAStC,EAAS2D,OAClBzO,KAAM,CAAC,IAAK,MAEd,CACEoN,QAAStC,EAAS4D,MAClB1O,KAAM,CAAC,QAAS,aAKlBsM,EAAAC,EAAAC,cAACmC,GAAD,CAAejR,MAAOA,GACpB4O,EAAAC,EAAAC,cAAC4B,GAAD,CACEC,mBAAmB,gBACnBhC,MAAM,SACNtL,KAAK,OACLuN,QAAS,kBAAMxD,EAAS2D,YAE1BnC,EAAAC,EAAAC,cAAC4B,GAAD,CACEC,mBAAmB,eACnBhC,MAAM,QACNtL,KAAK,OACLuN,QAAS,kBAAMxD,EAAS4D,aCR1B5C,GAAgBnQ,EAAEoQ,IAAFpQ,CACpB,CACE4P,WAAY,SACZmC,QAAS,OACTG,cAAe,MACfrC,eAAgB,gBAChBlK,SAAU,WACVuK,MAAO,IACP8B,OAAQ,GAEV,SAAArP,KAAGZ,MAAH,MAAgB,KAGHoQ,GA1BE,SAAC7E,GAChB,IAAMvL,EAAQ0O,qBAAWrO,GAEjB+M,EAAa7B,EAAb6B,SACR,OACEwB,EAAAC,EAAAC,cAACoC,GAAD,CAAelR,MAAOA,GACpB4O,EAAAC,EAAAC,cAACqC,GAAD,CAAU/D,SAAUA,IACpBwB,EAAAC,EAAAC,cAACsC,GAAD,CAAWhE,SAAUA,IACrBwB,EAAAC,EAAAC,cAACuC,GAAD,CAAWjE,SAAUA,MCZZkE,GARQrT,EAAEoQ,IAAFpQ,CAAQ,CAC7B+R,QAAS,OACTG,cAAe,MACfoB,SAAU,OACVrD,OAAQlP,EAAcC,EACtBkP,MAAOpP,EAAYC,ICsBf2O,GAAY1P,EAAEoQ,IAAFpQ,CAChB,CACEuT,OAAQ,4BACRtD,OdhCsB,GciCtBC,MAAOpP,GAET,SAAA6B,GAAA,IAAGsG,EAAHtG,EAAGsG,IAAKlH,EAARY,EAAQZ,MAAR,MAAqB,CACnByR,gBAAiBvK,EAAIC,YACjBnH,EAAMT,YAAY2H,EAAIC,YAAYjD,MAAMb,MACxC,WAIOqO,GAhCM,SAACnG,GACpB,IAAMvL,EAAQ0O,qBAAWrO,GACzB,OACEuO,EAAAC,EAAAC,cAAC6C,GAADtP,OAAAK,EAAA,EAAAL,CAAA,GAAoBkJ,EAApB,CAA2BvL,UACzB4O,EAAAC,EAAAC,cAAClQ,EAAagT,SAAd,KACG,SAAAC,GAAK,OACJA,EACEjD,EAAAC,EAAAC,cAACP,EAAA,EAAD,KACGhD,EAAM5H,KADT,MACkB4H,EAAMhI,aAGxBpD,MCZG2R,GAPM7T,EAAEoQ,IAAFpQ,CAAQ,CAC3B+R,QAAS,OACTG,cAAe,MACfoB,SAAU,OACVpD,MfJiC,EeI1BpP,ICsEH4O,GAAY1P,EAAEoQ,IAAFpQ,CAAQ,CACxB+R,QAAS,OACTG,cAAe,QAGX4B,GAAiB9T,EAAEoQ,IAAFpQ,CAAQ,CAC7B+R,QAAS,OACTG,cAAe,WAGX6B,GAAa/T,EAAEoQ,IAAFpQ,CAAQ,CACzB+R,QAAS,OACTG,cAAe,QAGF8B,GA9EA,SAAArR,GAAkC,IAAAsR,EAAAtR,EAA/BZ,aAA+B,IAAAkS,EAAvB,UAAuBA,EAAAC,EAGZpF,KAHYqF,EAAA/P,OAAAgH,EAAA,EAAAhH,CAAA8P,EAAA,GAGxCjF,EAHwCkF,EAAA,GAGlC7E,EAHkC6E,EAAA,GAGxBhF,EAHwBgF,EAAA,GAKzCC,EAAqC,CACzC7B,KAAMpD,EAASZ,KACf+D,KAAMnD,EAASX,KACf6D,MAAOlD,EAASR,MAChBmE,OAAQ3D,EAAST,QACjBqE,MAAO5D,EAASV,MAChB2D,GAAIjD,EAASP,OACb/L,EAAGsM,EAASP,OACZ9L,EAAGqM,EAASb,OAGd,OACEqC,EAAAC,EAAAC,cAACzO,EAAaiS,SAAd,CAAuBzQ,MAAO9B,EAAeC,IAC3C4O,EAAAC,EAAAC,cAACyD,GAAD,KACE3D,EAAAC,EAAAC,cAACiD,GAAD,KACEnD,EAAAC,EAAAC,cAACkD,GAAD,KACEpD,EAAAC,EAAAC,cAAClQ,EAAagT,SAAd,KACG,SAAApT,GAAO,OAAIA,GAAWoQ,EAAAC,EAAAC,cAACP,EAAA,EAAD,gBAAerB,EAAK3E,SAE7CqG,EAAAC,EAAAC,cAACP,EAAA,EAAD,CAAMoC,mBAAmB,QAAzB,SAAuCpD,GACvCqB,EAAAC,EAAAC,cAACP,EAAA,EAAD,CAAMoC,mBAAmB,SAAzB,UAAyCzD,EAAK5I,OAC9CsK,EAAAC,EAAAC,cAACP,EAAA,EAAD,CAAMoC,mBAAmB,SAAzB,UAAyCzD,EAAK9E,QAEhDwG,EAAAC,EAAAC,cAAC0D,GAAD,CAAUpF,SAAUiF,IACpBzD,EAAAC,EAAAC,cAAC2D,GAAD,KACGvF,EAAKtG,MAAMtC,MAAM3D,IAAI,SAACgD,EAAM+O,GAAP,OACpB/O,EAAKhD,IAAI,SAACuG,EAAKyL,GAAN,OACP/D,EAAAC,EAAAC,cAAC8D,GAAD,CACEjN,IAAG,GAAAuE,OAAKhD,EAAI1D,IACZ0D,IAAKA,EACLvD,KAAM+O,EACNnP,OAAQoP,UAMlB/D,EAAAC,EAAAC,cAACiD,GAAD,KACG7E,EAAKtG,MAAMW,cAAc5G,IAAI,SAAAkS,GAAY,OACxCjE,EAAAC,EAAAC,cAACgE,GAAD,CAAcnN,IAAG,GAAAuE,OAAK2I,EAAarP,KAChCqP,EAAavO,MAAM3D,IAAI,SAACgD,EAAM+O,GAAP,OACtB/O,EAAKhD,IAAI,SAACuG,EAAKyL,GAAN,OACP/D,EAAAC,EAAAC,cAAC8D,GAAD,CACEjN,IAAG,GAAAuE,OAAKhD,EAAI1D,IACZ0D,IAAKA,EACLvD,KAAM+O,EACNnP,OAAQoP,eCzDbI,GANG,kBAChBnE,EAAAC,EAAAC,cAACT,EAAA,EAAD,KACEO,EAAAC,EAAAC,cAACkE,GAAD,QCQgBC,QACW,cAA7B3U,OAAOD,SAAS6U,UAEe,UAA7B5U,OAAOD,SAAS6U,UAEhB5U,OAAOD,SAAS6U,SAASC,MACvB,2DCdNC,IAASC,OAAOzE,EAAAC,EAAAC,cAACwE,GAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.e876625e.chunk.js","sourcesContent":["import { css, keyframes } from \"@emotion/core\"\nimport styledNative from \"@emotion/native\"\nimport styled, { CreateStyled } from \"@emotion/styled\"\nimport React from \"react\"\nimport { isWeb } from \"./debug\"\n\nconst g: CreateStyled<any> = isWeb() ? styled : styledNative\n\nexport { React, g, css as getClassNameFromObject, keyframes }\n","import { Platform } from \"react-native\"\nimport { React } from \"../utils/view\"\n\nconst location =\n  typeof window !== \"undefined\" ? window.location : { search: \"\" }\n\nexport function isDebug() {\n  return isWeb() ? location.search.indexOf(\"?debug\") === 0 : false\n}\n\nexport function isWeb() {\n  return Platform.OS === \"web\"\n}\n\nexport const DebugContext = React.createContext(isDebug())\n","import { isDebug } from \"../../../utils/debug\"\n\nexport const BOX_WIDTH = isDebug() ? 44 : 24\nexport const BOX_HEIGHT = 24\nexport const LINE_LENGTH = 10\nexport const PREVIEW_LINE_LENGTH = 4\nexport const BOARD_LENGTH = 24\nexport const SHAPE_QUEUE_LENGTH = 3\nexport const GAME_THICK_INTERVAL = 750\nexport const GAME_ROTATION_DIRECTION: \"clockwise\" | \"counterclockwise\" =\n  \"clockwise\"\n\nexport const GAME_COMMANDS: GameCommands = {\n  action: \"Enter\",\n  down: \"ArrowDown\",\n  left: \"ArrowLeft\",\n  right: \"ArrowRight\"\n}\n\nexport const TETROMINO_THEME: Theme = {\n  name: \"default\",\n  shapeColors: {\n    i: \"maroon\",\n    j: \"silver\",\n    l: \"purple\",\n    o: \"navy\",\n    s: \"green\",\n    t: \"brown\",\n    z: \"teal\"\n  }\n}\n\nexport const GAMEBOY_THEME: Theme = {\n  name: \"gameboy\",\n  shapeColors: {\n    i: \"orange\",\n    j: \"cyan\",\n    l: \"red\",\n    o: \"yellow\",\n    s: \"Magenta\", // buggy\n    t: \"green\",\n    z: \"amber\" // buggy\n  }\n}\nexport const RED_THEME: Theme = {\n  name: \"red\",\n  shapeColors: {\n    i: \"red\",\n    j: \"red\",\n    l: \"red\",\n    o: \"red\",\n    s: \"red\",\n    t: \"red\",\n    z: \"red\"\n  }\n}\n\nexport const themes: Theme[] = [TETROMINO_THEME, GAMEBOY_THEME, RED_THEME]\n","import { React } from \"./view\"\n\nimport { themes } from \"../scenes/tetris/functions/settings\"\n\nexport function getThemeByName(theme: ThemeNames = \"default\"): Theme {\n  return themes.find(t => t.name === theme) || themes[0]\n}\n\nexport const ThemeContext = React.createContext<Theme>(getThemeByName())\n","import {\n  BOARD_LENGTH,\n  GAME_ROTATION_DIRECTION,\n  LINE_LENGTH,\n  SHAPE_QUEUE_LENGTH\n} from \"./settings\"\nimport { chance } from \"./util\"\n\n// rotate: (x,y) -> (-y,x)\nexport const rotate90Left = (points: Point[]): Point[] => {\n  // rotate\n  // tslint:disable-next-line:variable-name\n  const newPoints = points.map(({ x: _x, y: _y }) => ({ x: -_y, y: _x }))\n  // find bottom left point (origin)\n  const bottomPoints = getFacePoints(newPoints, \"bottom\")\n  let originPoint: Point = bottomPoints[0]\n  for (const currentPoint of bottomPoints) {\n    if (!originPoint || currentPoint.x < originPoint.x) {\n      originPoint = currentPoint\n    }\n  }\n  // translate to origin = 0,0\n  const deltaX = originPoint.x < 0 ? -originPoint.x : originPoint.x\n  const deltaY = originPoint.y < 0 ? -originPoint.y : originPoint.y\n  const result = newPoints.map(({ x, y }) => ({ x: x + deltaX, y: y + deltaY }))\n  return result\n}\n\nconst coordinatesOn1stCuadrant: ShapeCoordinates = {\n  i: [{ x: 0, y: 0 }, { x: 1, y: 0 }, { x: 2, y: 0 }, { x: 3, y: 0 }],\n  j: [{ x: 0, y: 0 }, { x: 0, y: 1 }, { x: 1, y: 0 }, { x: 2, y: 0 }],\n  l: [{ x: 0, y: 0 }, { x: 1, y: 0 }, { x: 2, y: 0 }, { x: 2, y: 1 }],\n  o: [{ x: 0, y: 0 }, { x: 1, y: 0 }, { x: 0, y: 1 }, { x: 1, y: 1 }],\n  s: [{ x: 0, y: 0 }, { x: 1, y: 0 }, { x: 1, y: 1 }, { x: 2, y: 1 }],\n  t: [{ x: 0, y: 0 }, { x: 1, y: 0 }, { x: 2, y: 0 }, { x: 1, y: 1 }],\n  z: [{ x: 0, y: 1 }, { x: 1, y: 1 }, { x: 1, y: 0 }, { x: 2, y: 0 }]\n}\n\nconst shapes: ShapeType[] = (Object.keys(\n  coordinatesOn1stCuadrant\n) as unknown) as ShapeType[]\n\nexport const coordinates: ShapeAllPositionCoordinates = {\n  0: coordinatesOn1stCuadrant,\n  1: { ...coordinatesOn1stCuadrant },\n  2: { ...coordinatesOn1stCuadrant },\n  3: { ...coordinatesOn1stCuadrant }\n}\n\nfor (const i of shapes) {\n  const first = coordinatesOn1stCuadrant[i]\n  const second = rotate90Left(first)\n  const third = rotate90Left(second)\n  const fourth = rotate90Left(third)\n  coordinates[1][i] = second\n  coordinates[2][i] = third\n  coordinates[3][i] = fourth\n}\n\nconst c = chance()\nexport function createShape(\n  initial: Partial<AnonymousShape> = {},\n  boardLength = BOARD_LENGTH\n): Shape {\n  const type = c.pickone([\"o\", \"i\", \"s\", \"z\", \"l\", \"j\", \"t\"]) as ShapeType\n  return {\n    column: 4,\n    id: c.guid({ version: 4 }),\n    line: boardLength - 1,\n    position: 0,\n    type,\n    ...initial\n  }\n}\n\nexport function createLine(lineLength = LINE_LENGTH): AnonymousBox[] {\n  const boxes = new Array(lineLength).fill({})\n  return boxes.map(() => ({ id: c.guid({ version: 4 }) }))\n}\n\nfunction getRotatedCoordinates(shape: Shape) {\n  return coordinates[shape.position][shape.type]\n}\n\nexport function getNextPosition(currentPosition: ShapePosition): ShapePosition {\n  switch (currentPosition) {\n    case 0:\n      return GAME_ROTATION_DIRECTION === \"clockwise\" ? 1 : 3\n    case 1:\n      return GAME_ROTATION_DIRECTION === \"clockwise\" ? 2 : 0\n    case 2:\n      return GAME_ROTATION_DIRECTION === \"clockwise\" ? 3 : 1\n    default:\n      return GAME_ROTATION_DIRECTION === \"clockwise\" ? 0 : 2\n  }\n}\n\nexport function translateLine(lines: number, y: number): number {\n  return lines - y\n}\n\nexport function getAbsoluteShapeCoordinates(shape: Shape): Point[] {\n  const finalPoints: Point[] = getRotatedCoordinates(shape)\n  // at this point we are sure is not off the screen (that is ensured by user controls)\n  const result = finalPoints.map(({ x, y }) => ({\n    x: x + shape.column,\n    y: y + shape.line\n  }))\n  return result\n}\n\nfunction getYsByXs(points: Point[]): XsByXs {\n  const result: XsByXs = {}\n  for (const { x, y } of points) {\n    if (!result[x]) result[x] = []\n    result[x].push(y)\n  }\n  return result\n}\n\nfunction getXsByYs(points: Point[]): XsByXs {\n  const result: XsByXs = {}\n  for (const { x, y } of points) {\n    if (!result[y]) result[y] = []\n    result[y].push(x)\n  }\n  return result\n}\n\nexport function getFacePoints(points: Point[], side: Side): Point[] {\n  const xsByXs =\n    side === \"top\" || side === \"bottom\" ? getYsByXs(points) : getXsByYs(points)\n  // suspicious: operation with signs might be more simple\n  // the swap of x by y because of the previous if is a bit complex and even clunky to my own taste, but it works for now\n  // xsbyxs is a confusing name but I couldn't think of any thing better yet\n  const result = Object.keys(xsByXs).map(key => {\n    return {\n      x:\n        side === \"left\" || side === \"right\"\n          ? side === \"right\"\n            ? Math.max.apply(null, xsByXs[key])\n            : Math.min.apply(null, xsByXs[key])\n          : Number(key),\n      y:\n        side === \"bottom\" || side === \"top\"\n          ? side === \"top\"\n            ? Math.max.apply(null, xsByXs[key])\n            : Math.min.apply(null, xsByXs[key])\n          : Number(key)\n    }\n  })\n  return result\n}\n\nexport function getShapeFacePoints(shape: Shape, side: Side): Point[] {\n  const absoluteRotatedCoordinates = getAbsoluteShapeCoordinates(shape)\n  return getFacePoints(absoluteRotatedCoordinates, side)\n}\n\nexport function getShapeShownHeight(shape: Shape): number {\n  const rotatedCoordinates = getRotatedCoordinates(shape)\n  const maxY = Math.max.apply(null, rotatedCoordinates.map(rc => rc.y)) + 1\n  const availableHeight = BOARD_LENGTH - shape.line\n  if (availableHeight < maxY) {\n    return availableHeight\n  }\n  return maxY\n}\n\nexport function getShapeWidth(shape: Shape): number {\n  const rotatedXs = getRotatedCoordinates(shape).map(rc => rc.x)\n  const minX = Math.min.apply(null, rotatedXs)\n  const maxX = Math.max.apply(null, rotatedXs)\n  return maxX - minX\n}\n\nfunction isOffTheBoard({ x, y }: Point, side: Side, shape: Shape): boolean {\n  switch (side) {\n    case \"bottom\":\n      return y <= 1\n    case \"left\":\n      return x <= 0\n    case \"right\": {\n      return x > LINE_LENGTH - getShapeWidth(shape) + (x - shape.column) - 1\n    }\n    case \"top\": {\n      return (\n        y > BOARD_LENGTH - getShapeShownHeight(shape) + (y - shape.line) - 1\n      )\n    }\n  }\n  return true\n}\n\nexport function doesShapeCollidesWithFilledBoxAtSide(\n  board: Board,\n  shape: Shape,\n  side: Side\n): boolean {\n  const points: Point[] = getShapeFacePoints(shape, side)\n  return points.find(({ x: currentPointColumn, y: currentPointRow }) => {\n    const currentLine = translateLine(board.lines.length, currentPointRow)\n    if (\n      isOffTheBoard({ x: currentPointColumn, y: currentPointRow }, side, shape)\n    ) {\n      return true\n    }\n    if (side === \"bottom\") {\n      if (currentPointRow > board.lines.length) {\n        return true\n      }\n      // check bottom side\n      const box = board.lines[currentLine + 1][currentPointColumn]\n      if (box.partOfShape && box.partOfShape.shape.id !== shape.id) {\n        return true\n      }\n      return false\n    } else if (side === \"left\") {\n      if (currentPointRow <= 0) {\n        return false\n      }\n      const box = board.lines[currentLine][currentPointColumn - 1]\n      return box.partOfShape !== undefined &&\n        box.partOfShape.shape.id !== shape.id\n        ? true\n        : false\n    } else if (side === \"right\") {\n      if (currentPointColumn + 1 >= board.lines[currentLine].length) {\n        return true\n      }\n      const box = board.lines[currentLine][currentPointColumn + 1]\n      return box.partOfShape !== undefined &&\n        box.partOfShape.shape.id !== shape.id\n        ? true\n        : false\n    }\n    return false\n  }) !== undefined\n    ? true\n    : false\n}\n\nexport function doesShapeCollidesWithFilledBoxInCurrentPosition(\n  board: Board,\n  shape: Shape\n): boolean {\n  // this just checks that the shape current points can be placed on the board\n  const shapeCoordinates = getAbsoluteShapeCoordinates(shape)\n  return shapeCoordinates.find(point => {\n    const sides: Side[] = [\"left\", \"right\", \"bottom\", \"top\"]\n    // is within its limits\n    const pointOffTheBoard = sides.find(side => {\n      return isOffTheBoard(point, side, shape)\n    })\n    let collision = false\n    const pointBoxLine = board.lines[translateLine(BOARD_LENGTH, point.y)]\n    if (pointBoxLine) {\n      const pointBox = pointBoxLine[point.x]\n      // does not overlap with an existing box with a shape different from this shape (to simplify algorithm complexity)\n      collision =\n        pointBox !== undefined &&\n        pointBox.partOfShape !== undefined &&\n        pointBox.partOfShape.shape !== undefined &&\n        pointBox.partOfShape.shape.id !== undefined &&\n        pointBox.partOfShape.shape.id !== shape.id\n    }\n    return pointOffTheBoard ? true : collision ? true : false\n  }) !== undefined\n    ? true\n    : false\n}\n\nexport function prepareQueue(board: Board): [Shape[], Shape] {\n  const newQueue = [...board.shapeQueue]\n  for (let i = board.shapeQueue.length; i < SHAPE_QUEUE_LENGTH; i++) {\n    newQueue[i] = createShape({}, board.lines.length)\n  }\n  return [newQueue.slice(1), newQueue[0]]\n}\n\n// TODO: refactor to putShapeInTheNextLineOfTheBoard\nexport function putShapeInTheBoard(shape: Shape, board: Board) {\n  if (doesShapeCollidesWithFilledBoxAtSide(board, shape, \"bottom\") === true) {\n    return undefined\n  }\n  return {\n    ...shape\n  }\n}\n","import C from \"chance\"\n\nexport const chance = () => new C()\n","import { BOARD_LENGTH, LINE_LENGTH } from \"./settings\"\nimport { createLine, getAbsoluteShapeCoordinates, translateLine } from \"./shape\"\nimport { chance } from \"./util\"\n\nconst c = chance()\nexport function createBoard(\n  boardLength = BOARD_LENGTH,\n  lineLength = LINE_LENGTH\n): Board {\n  return {\n    activeShape: undefined,\n    id: c.guid({ version: 4 }),\n    lines: Array.from(new Array(boardLength)).map(() => {\n      return Array.from(new Array(lineLength)).map(() => ({\n        id: c.guid({ version: 4 })\n      }))\n    }),\n    previewBoards: [],\n    shapeQueue: []\n  }\n}\n\nfunction isNotPartOfAFigure(box: AnonymousBox) {\n  return !box.partOfShape || !box.partOfShape.id ? true : false\n}\n\nfunction fullLineDetected(line: AnonymousBox[]): boolean {\n  return line.find(box => isNotPartOfAFigure(box)) === undefined\n}\n\nexport function simplifyLines(board: Board): [Line[], number] {\n  let simplifiedLines = 0\n  const newLines = board.lines.reduce(\n    (acc, line) => {\n      if (fullLineDetected(line)) {\n        simplifiedLines++\n        return [createLine(), ...acc.slice()]\n      }\n      return [...acc, line]\n    },\n    [] as AnonymousBox[][]\n  )\n  return [newLines, simplifiedLines]\n}\n\nexport function drawBoardLines(\n  boardLines: Line[],\n  activeShape?: Shape\n): Line[] {\n  if (!activeShape) {\n    return [...boardLines]\n  }\n  const coords = getAbsoluteShapeCoordinates(activeShape)\n  // console.log(\"coords\", { coords })\n  return boardLines.map((line, rowIndex) => {\n    const currentLine = translateLine(boardLines.length, rowIndex)\n    return line.map((box, columnIndex) => {\n      // FIXME: instead go over shape coordinates and check if on any to mark\n      if (\n        coords.find(({ x, y }) => y === currentLine && x === columnIndex) !==\n        undefined\n      ) {\n        const shapePartId = chance().guid()\n        return {\n          ...box,\n          partOfShape: {\n            id: shapePartId,\n            order: 1,\n            shape: activeShape\n          }\n        }\n      } else if (\n        box.partOfShape &&\n        box.partOfShape.shape.id === activeShape.id\n      ) {\n        return {\n          ...box,\n          partOfShape: undefined\n        }\n      }\n      return {\n        ...box\n      }\n    })\n  })\n}\n","import { createBoard } from \"./board\"\nimport { GAME_THICK_INTERVAL } from \"./settings\"\nimport { chance } from \"./util\"\n\nexport function getLevelForLines(lines: number): number {\n  return Math.floor(lines / 5) + 1\n}\n\nexport function getTickForLevel(level: number): number {\n  switch (true) {\n    case level === 1:\n      return 650\n    case level === 2:\n      return 500\n    case level === 3:\n      return 350\n    case level === 4:\n      return 200\n    case level === 5:\n      return 80\n    default:\n      return GAME_THICK_INTERVAL / (level + 4)\n  }\n}\n\nexport function createGame(previous?: Game): Game {\n  const c = chance()\n  return {\n    board: createBoard(),\n    gameOver: false,\n    id: c.guid({ version: 4 }),\n    level: 1,\n    lines: 0,\n    paused: false,\n    previous,\n    score: 0,\n    ticks: 0\n  }\n}\n","import { React } from \"../../../utils/view\"\n\nimport { Reducer } from \"react\"\nimport { useKeyDowns } from \"../../joystick/components/keyboard\"\nimport { createBoard, drawBoardLines, simplifyLines } from \"./board\"\nimport { createGame, getLevelForLines, getTickForLevel } from \"./game\"\nimport {\n  doesShapeCollidesWithFilledBoxAtSide,\n  doesShapeCollidesWithFilledBoxInCurrentPosition,\n  getNextPosition,\n  prepareQueue\n} from \"./shape\"\n\nconst { useReducer, useEffect, useLayoutEffect, useState, useRef } = React\n\nconst initialGame: Game = createGame()\n\nconst reduceGame: GameReducer = (previous, action) => {\n  if (previous.gameOver === true && action.type !== \"RESTART\") return previous\n  if (previous.paused && action.type !== \"PAUSE\") return previous\n  switch (action.type) {\n    case \"PAUSE\": {\n      return {\n        ...previous,\n        paused: !previous.paused\n      }\n    }\n    case \"DOWN\":\n    case \"THICK\": {\n      const [newShapeQueue, oneForNow] = prepareQueue(previous.board)\n      const collidesOneForNow = doesShapeCollidesWithFilledBoxAtSide(\n        previous.board,\n        oneForNow,\n        \"bottom\"\n      )\n      let activeShape = previous.board.activeShape\n      let useOneForNow = false\n      let newBoardLines = previous.board.lines\n      let newLines = 0\n      if (activeShape) {\n        const collidesActive = activeShape\n          ? doesShapeCollidesWithFilledBoxAtSide(\n              previous.board,\n              activeShape,\n              \"bottom\"\n            )\n          : false\n        if (!collidesActive) {\n          activeShape = { ...activeShape, line: activeShape.line - 1 }\n        } else {\n          activeShape = undefined\n          ;[newBoardLines, newLines] = simplifyLines(previous.board)\n        }\n      } else {\n        activeShape = !collidesOneForNow ? oneForNow : undefined\n        useOneForNow = activeShape ? activeShape.id === oneForNow.id : false\n      }\n      const finalShapeQueue = useOneForNow\n        ? newShapeQueue\n        : [oneForNow, ...newShapeQueue.slice(0, newShapeQueue.length)]\n      const lines = previous.lines + newLines\n      const level = getLevelForLines(lines)\n\n      return {\n        ...previous,\n        board: {\n          ...previous.board,\n          activeShape,\n          lines: drawBoardLines(newBoardLines, activeShape),\n          previewBoards: finalShapeQueue.map(currentShape => {\n            const board = createBoard(4, 4)\n            const adaptedShape: Shape = {\n              ...currentShape,\n              column: 0,\n              line: 1\n            }\n            return {\n              ...board,\n              lines: drawBoardLines(board.lines, adaptedShape)\n            }\n          }),\n          shapeQueue: finalShapeQueue\n        },\n        endDate:\n          activeShape === undefined && collidesOneForNow\n            ? new Date()\n            : undefined,\n        gameOver: activeShape === undefined && collidesOneForNow ? true : false,\n        level,\n        lines,\n        startDate: previous.ticks === 0 ? new Date() : previous.startDate,\n        ticks: action.payload ? Number(action.payload) : previous.ticks\n      }\n    }\n    case \"BLAST\": {\n      let activeShape = previous.board.activeShape\n      if (!activeShape) return previous\n      let collidesActive = doesShapeCollidesWithFilledBoxAtSide(\n        previous.board,\n        activeShape,\n        \"bottom\"\n      )\n      while (!collidesActive) {\n        activeShape = {\n          ...activeShape,\n          line: activeShape.line - 1\n        }\n\n        collidesActive = doesShapeCollidesWithFilledBoxAtSide(\n          previous.board,\n          activeShape,\n          \"bottom\"\n        )\n      }\n\n      return {\n        ...previous,\n        board: {\n          ...previous.board,\n          activeShape,\n          lines: drawBoardLines(previous.board.lines, activeShape)\n        }\n      }\n    }\n    case \"LEFT\": {\n      if (!previous.board.activeShape) {\n        return previous\n      }\n      const activeShape = {\n        ...previous.board.activeShape,\n        column: !doesShapeCollidesWithFilledBoxAtSide(\n          previous.board,\n          previous.board.activeShape,\n          \"left\"\n        )\n          ? previous.board.activeShape.column - 1\n          : previous.board.activeShape.column\n      }\n      return {\n        ...previous,\n        board: {\n          ...previous.board,\n          activeShape,\n          lines: drawBoardLines(previous.board.lines, activeShape)\n        }\n      }\n    }\n    case \"RIGHT\": {\n      if (!previous.board.activeShape) {\n        return previous\n      }\n      const activeShape = {\n        ...previous.board.activeShape,\n        column: !doesShapeCollidesWithFilledBoxAtSide(\n          previous.board,\n          previous.board.activeShape,\n          \"right\"\n        )\n          ? previous.board.activeShape.column + 1\n          : previous.board.activeShape.column\n      }\n      return {\n        ...previous,\n        board: {\n          ...previous.board,\n          activeShape,\n          lines: drawBoardLines(previous.board.lines, activeShape)\n        }\n      }\n    }\n    case \"ROTATE\": {\n      // rotation strategy as setting? axis place on the shape\n      if (!previous.board.activeShape) {\n        return previous\n      }\n      const activeShape = {\n        ...previous.board.activeShape,\n        // FIXME: add extra logic to rotate adjusting absolute coordinates so it feels correct\n        // FIXME: add extra logic for shapes at the sides\n        position: getNextPosition(previous.board.activeShape.position)\n      }\n      const collides = doesShapeCollidesWithFilledBoxInCurrentPosition(\n        previous.board,\n        activeShape\n      )\n      if (collides) {\n        return previous\n      }\n      // get shape width for this new on all lines or not off board\n      // if width > available on some line\n      // if intersection, adjust to most closest...\n      return {\n        ...previous,\n        board: {\n          ...previous.board,\n          activeShape,\n          lines: drawBoardLines(previous.board.lines, activeShape)\n        }\n      }\n    }\n    case \"RESTART\": {\n      // console.log(\"unknown action\", { action })\n      return createGame(previous)\n    }\n    default: {\n      // console.log(\"unknown action\", { action })\n      return previous\n    }\n  }\n}\n\nconst useTick = (\n  dispatchTick: (t: number) => void,\n  getInterval: () => number,\n  props: Array<unknown>,\n  shouldUseLayoutEffect: boolean = false\n) => {\n  let tickCount = 0\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null)\n\n  const cb = () => {\n    dispatchTick(++tickCount)\n    timeoutRef.current = setTimeout(() => callbackRef.current(), getInterval())\n  }\n\n  const callbackRef = useRef<() => void>(cb)\n\n  useEffect(() => {\n    callbackRef.current = cb\n  })\n\n  let effectFunction = useEffect\n  if (shouldUseLayoutEffect) {\n    effectFunction = useLayoutEffect\n  }\n  effectFunction(() => {\n    timeoutRef.current = setTimeout(() => callbackRef.current(), getInterval())\n    return () =>\n      timeoutRef.current ? clearTimeout(timeoutRef.current) : undefined\n  }, props)\n}\n\nconst createHandler = (\n  type: ActionType,\n  dispatch: React.Dispatch<Action>\n): CommandHandler => (_: unknown = {}, e = undefined) => {\n  if (e && typeof e.preventDefault === \"function\") {\n    e.preventDefault()\n  } // avoid scroll\n  dispatch({ type })\n}\n\nconst createHandlers: CommandCreator = d => ({\n  BLAST: createHandler(\"BLAST\", d),\n  DOWN: createHandler(\"DOWN\", d),\n  LEFT: createHandler(\"LEFT\", d),\n  PAUSE: createHandler(\"PAUSE\", d),\n  RESTART: createHandler(\"RESTART\", d),\n  RIGHT: createHandler(\"RIGHT\", d),\n  ROTATE: createHandler(\"ROTATE\", d),\n  THICK: createHandler(\"THICK\", d)\n})\n\nexport function useTetris(): [Game, number, Commands] {\n  const [game, dispatch] = useReducer<Reducer<Game, Action>, Game>(\n    reduceGame,\n    initialGame,\n    () => initialGame\n  )\n\n  useTick(\n    t => dispatch({ type: \"THICK\", payload: t }),\n    () => getTickForLevel(game.level),\n    [game.level]\n  )\n\n  const handlers = createHandlers(dispatch)\n\n  const [duration, setDuration] = useState(0)\n  useTick(\n    () => {\n      const newDuration =\n        game.endDate && game.startDate\n          ? Math.floor(\n              (game.endDate.getTime() - game.startDate.getTime()) / 1000\n            )\n          : game.startDate\n          ? Math.floor((new Date().getTime() - game.startDate.getTime()) / 1000)\n          : 0\n      if (!game.paused) setDuration(newDuration)\n    },\n    () => 250,\n    [game.startDate, game.endDate, game.paused]\n  )\n\n  return [game, duration, handlers]\n}\n","import { StatelessComponent, useContext } from \"react\"\nimport {\n  Text,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View\n} from \"react-native\"\nimport { ThemeContext } from \"../../../utils/theme\"\nimport { g, React } from \"../../../utils/view\"\n\ntype ButtonType = \"square\" | \"pill\" | \"circle\"\n\ntype Props = TouchableOpacityProps & {\n  title: string\n  type?: ButtonType\n}\n\nconst ButtonComponent: StatelessComponent<Props> = (props: Props) => {\n  const theme = useContext(ThemeContext)\n  const { title } = props\n  const type = props.type || \"square\"\n  return (\n    <Container {...{ ...props, theme, type: type || \"square\" }}>\n      <ViewContainer theme={theme}>\n        <Caption theme={theme} type={type}>\n          {title}\n        </Caption>\n      </ViewContainer>\n    </Container>\n  )\n}\n\nconst BUTTON_SIDE = 30\n\nconst Container = g(TouchableOpacity)<{ theme: Theme; type: ButtonType }>(\n  {\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  ({ theme, type }) => ({\n    borderRadius:\n      type === \"circle\" ? BUTTON_SIDE / 2 : type === \"pill\" ? 15 : 4,\n    borderWidth: 1,\n    height: type === \"pill\" ? BUTTON_SIDE / 1.5 : BUTTON_SIDE,\n    width: BUTTON_SIDE\n  })\n)\n\nconst ViewContainer = g(View)<{ theme: Theme }>({}, ({ theme }) => ({}))\n\nconst Caption = g(Text)<{ theme: Theme; type: ButtonType }>({}, ({ type }) => ({\n  fontSize: type === \"pill\" ? 8 : 20\n}))\n\nexport default ButtonComponent\n","import { throttle } from \"lodash\"\nimport { useEffect } from \"react\"\nimport { isWeb } from \"../../../utils/debug\"\n\ntype FilteredHandler = {\n  keyHandler: KeyCodeHandler\n  e: KeyboardEvent\n}\n\nconst filterHandlers = (\n  keyHandlers: KeyCodeHandler[],\n  e: KeyboardEvent\n): FilteredHandler[] => {\n  const filteredHandlers = keyHandlers\n    .filter(({ keys }) =>\n      keys.find(k => String(k) === e.key) !== undefined ? true : false\n    )\n    .map(keyHandler => ({ keyHandler, e }))\n  return filteredHandlers\n}\n\nconst runHandlers = throttle(\n  (keyEventHandlers: FilteredHandler[], e: KeyboardEvent) => {\n    keyEventHandlers.forEach(({ keyHandler, e: currentEvent }) => {\n      keyHandler.handler(currentEvent.key, e)\n    })\n  },\n  250\n)\n\n/**\n * Search your keys here (not typed yet):\n * https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values\n */\nexport function useKeyDowns(keyHandlers: UseKeyDownsArgs) {\n  useEffect(() => {\n    const listener = (e: KeyboardEvent) => {\n      const fh = filterHandlers(keyHandlers, e)\n      if (fh.length > 0) {\n        runHandlers(fh, e)\n      }\n    }\n    if (isWeb()) {\n      window.addEventListener(\"keydown\", listener)\n    }\n    return () =>\n      isWeb() ? window.removeEventListener(\"keydown\", listener) : undefined\n  }, [])\n}\n","import { useContext } from \"react\"\nimport { TouchableOpacityProps, View } from \"react-native\"\nimport { ThemeContext } from \"../../../utils/theme\"\nimport { g, React } from \"../../../utils/view\"\nimport Button from \"./Button\"\nimport { useKeyDowns } from \"./keyboard\"\n\ntype Props = TouchableOpacityProps & {\n  handlers: JoystickCommands\n}\n\nconst Joystick = (props: Props) => {\n  const theme = useContext(ThemeContext)\n\n  const { handlers } = props\n\n  useKeyDowns([\n    {\n      handler: handlers.up,\n      keys: [\"ArrowUp\", \"w\"]\n    },\n    {\n      handler: handlers.right,\n      keys: [\"ArrowRight\", \"d\"]\n    },\n    {\n      handler: handlers.left,\n      keys: [\"ArrowLeft\", \"a\"]\n    },\n    {\n      handler: handlers.down,\n      keys: [\"ArrowDown\", \"s\"]\n    }\n  ])\n\n  return (\n    <ViewContainer theme={theme}>\n      <Button\n        accessibilityLabel=\"up\"\n        title={\"\\u25B2\"}\n        onPress={() => handlers.up()}\n      />\n      <HorizontalAxis>\n        <Button\n          accessibilityLabel=\"left button\"\n          title={\"\\u25C0\"}\n          onPress={() => handlers.left()}\n        />\n        <Button\n          accessibilityLabel=\"center\"\n          title={\" \"}\n          onPress={() => undefined}\n        />\n        <Button\n          accessibilityLabel=\"right\"\n          title={\"\\u25B6\"}\n          onPress={() => handlers.right()}\n        />\n      </HorizontalAxis>\n      <Button\n        accessibilityLabel=\"down\"\n        title={\"\\u25BC\"}\n        onPress={() => handlers.down()}\n      />\n    </ViewContainer>\n  )\n}\n\nconst ViewContainer = g(View)<{ theme: Theme }>(\n  {\n    alignItems: \"center\",\n    display: \"flex\",\n    zIndex: 1\n  },\n  ({ theme }) => ({})\n)\nconst HorizontalAxis = g(View)({\n  alignItems: \"center\",\n  display: \"flex\",\n  flexDirection: \"row\"\n})\n\nexport default Joystick\n","import { useContext } from \"react\"\nimport {\n  Text,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View\n} from \"react-native\"\nimport { ThemeContext } from \"../../../utils/theme\"\nimport { g, React } from \"../../../utils/view\"\nimport Button from \"./Button\"\nimport { useKeyDowns } from \"./keyboard\"\n\ntype Props = TouchableOpacityProps & {\n  handlers: JoystickCommands\n}\n\nconst Joystick = (props: Props) => {\n  const theme = useContext(ThemeContext)\n  const { handlers } = props\n\n  useKeyDowns([\n    {\n      handler: handlers.x,\n      keys: [\"j\", \"z\"]\n    },\n    {\n      handler: handlers.y,\n      keys: [\"k\", \"x\"]\n    }\n  ])\n\n  return (\n    <ViewContainer theme={theme}>\n      <Button\n        accessibilityLabel=\"x button\"\n        title=\"X\"\n        type=\"circle\"\n        onPress={() => handlers.x()}\n      />\n      <Button\n        accessibilityLabel=\"y button\"\n        title=\"Y\"\n        type=\"circle\"\n        onPress={() => handlers.y()}\n      />\n    </ViewContainer>\n  )\n}\n\nconst ViewContainer = g(View)<{ theme: Theme }>(\n  {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  ({ theme }) => ({})\n)\n\nexport default Joystick\n","import { useContext } from \"react\"\nimport { TouchableOpacityProps, View } from \"react-native\"\nimport { ThemeContext } from \"../../../utils/theme\"\nimport { g, React } from \"../../../utils/view\"\nimport Button from \"./Button\"\nimport { useKeyDowns } from \"./keyboard\"\n\ntype Props = TouchableOpacityProps & {\n  handlers: JoystickCommands\n}\n\nconst OptionPad = (props: Props) => {\n  const theme = useContext(ThemeContext)\n  const { handlers } = props\n\n  useKeyDowns([\n    {\n      handler: handlers.select,\n      keys: [\" \", \"o\"]\n    },\n    {\n      handler: handlers.start,\n      keys: [\"Enter\", \"Escape\"]\n    }\n  ])\n\n  return (\n    <ViewContainer theme={theme}>\n      <Button\n        accessibilityLabel=\"select button\"\n        title=\"Select\"\n        type=\"pill\"\n        onPress={() => handlers.select()}\n      />\n      <Button\n        accessibilityLabel=\"start button\"\n        title=\"Start\"\n        type=\"pill\"\n        onPress={() => handlers.start()}\n      />\n    </ViewContainer>\n  )\n}\n\nconst ViewContainer = g(View)<{ theme: Theme }>(\n  {\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: 60\n  },\n  ({ theme }) => ({})\n)\n\nexport default OptionPad\n","import { useContext } from \"react\"\nimport {\n  Text,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View\n} from \"react-native\"\nimport { ThemeContext } from \"../../../utils/theme\"\nimport { g, React } from \"../../../utils/view\"\nimport ArrowPad from \"./ArrowPad\"\nimport ButtonPad from \"./ButtonPad\"\nimport OptionPad from \"./OptionPad\"\n\ntype Props = TouchableOpacityProps & {\n  handlers: JoystickCommands\n}\n\nconst Joystick = (props: Props) => {\n  const theme = useContext(ThemeContext)\n\n  const { handlers } = props\n  return (\n    <ViewContainer theme={theme}>\n      <ArrowPad handlers={handlers} />\n      <OptionPad handlers={handlers} />\n      <ButtonPad handlers={handlers} />\n    </ViewContainer>\n  )\n}\n\nconst ViewContainer = g(View)<{ theme: Theme }>(\n  {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    position: \"relative\",\n    width: 250,\n    zIndex: 1\n  },\n  ({ theme }) => ({})\n)\n\nexport default Joystick\n","import { View } from \"react-native\"\nimport { g } from \"../../../utils/view\"\n\nimport { BOARD_LENGTH, BOX_WIDTH, LINE_LENGTH } from \"../functions/settings\"\n\nconst BoardComponent = g(View)({\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n  height: LINE_LENGTH * BOARD_LENGTH,\n  width: BOX_WIDTH * LINE_LENGTH\n})\n\nexport default BoardComponent\n","import { useContext } from \"react\"\nimport { Text, View } from \"react-native\"\nimport { DebugContext } from \"../../../utils/debug\"\nimport { ThemeContext } from \"../../../utils/theme\"\nimport { g, React } from \"../../../utils/view\"\n\nimport { BOX_HEIGHT, BOX_WIDTH } from \"../functions/settings\"\n\ninterface Props {\n  box: Box\n  line: number\n  column: number\n}\nconst BoxComponent = (props: Props) => {\n  const theme = useContext(ThemeContext)\n  return (\n    <Container {...{ ...props, theme }}>\n      <DebugContext.Consumer>\n        {debug =>\n          debug ? (\n            <Text>\n              {props.line} / {props.column}\n            </Text>\n          ) : (\n            undefined\n          )\n        }\n      </DebugContext.Consumer>\n    </Container>\n  )\n}\n\nconst Container = g(View)<Props & { theme: Theme }>(\n  {\n    border: \"1px dashed rgba(0,0,0,.2)\",\n    height: BOX_HEIGHT,\n    width: BOX_WIDTH\n  },\n  ({ box, theme }) => ({\n    backgroundColor: box.partOfShape\n      ? theme.shapeColors[box.partOfShape.shape.type]\n      : \"white\"\n  })\n)\n\nexport default BoxComponent\n","import { View } from \"react-native\"\nimport { g } from \"../../../utils/view\"\n\nimport { BOX_WIDTH, PREVIEW_LINE_LENGTH } from \"../functions/settings\"\n\nconst ShapePreview = g(View)({\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n  width: BOX_WIDTH * PREVIEW_LINE_LENGTH\n})\n\nexport default ShapePreview\n","import { Text, View } from \"react-native\"\nimport { DebugContext } from \"../../../utils/debug\"\nimport { getThemeByName, ThemeContext } from \"../../../utils/theme\"\nimport { g, React } from \"../../../utils/view\"\n\nimport { useTetris } from \"../functions/hook\"\n\nimport Joystick from \"../../joystick/components/Joystick\"\nimport BoardComponent from \"./Board\"\nimport BoxComponent from \"./Box\"\nimport ShapePreview from \"./ShapePreview\"\n\ntype Props = {\n  theme?: ThemeNames\n}\n\nconst tetris = ({ theme = \"default\" }: Props) => {\n  // TODO: receive default configuration via parameter (initial game maybe)\n  // e.g. change keyboard assignation, etc\n  const [game, duration, handlers] = useTetris()\n\n  const joystickHandlers: JoystickCommands = {\n    down: handlers.DOWN,\n    left: handlers.LEFT,\n    right: handlers.RIGHT,\n    select: handlers.RESTART,\n    start: handlers.PAUSE,\n    up: handlers.ROTATE,\n    x: handlers.ROTATE,\n    y: handlers.BLAST\n  }\n\n  return (\n    <ThemeContext.Provider value={getThemeByName(theme)}>\n      <Container>\n        <BoardContainer>\n          <Indicators>\n            <DebugContext.Consumer>\n              {isDebug => isDebug && <Text>Thicks: {game.ticks}</Text>}\n            </DebugContext.Consumer>\n            <Text accessibilityLabel=\"time\">Time: {duration}</Text>\n            <Text accessibilityLabel=\"lines\">Lines: {game.lines}</Text>\n            <Text accessibilityLabel=\"level\">Level: {game.level}</Text>\n          </Indicators>\n          <Joystick handlers={joystickHandlers} />\n          <BoardComponent>\n            {game.board.lines.map((line, lineIndex) =>\n              line.map((box, boxIndex) => (\n                <BoxComponent\n                  key={`${box.id}`}\n                  box={box}\n                  line={lineIndex}\n                  column={boxIndex}\n                />\n              ))\n            )}\n          </BoardComponent>\n        </BoardContainer>\n        <BoardContainer>\n          {game.board.previewBoards.map(previewBoard => (\n            <ShapePreview key={`${previewBoard.id}`}>\n              {previewBoard.lines.map((line, lineIndex) =>\n                line.map((box, boxIndex) => (\n                  <BoxComponent\n                    key={`${box.id}`}\n                    box={box}\n                    line={lineIndex}\n                    column={boxIndex}\n                  />\n                ))\n              )}\n            </ShapePreview>\n          ))}\n        </BoardContainer>\n      </Container>\n    </ThemeContext.Provider>\n  )\n}\n\nconst Container = g(View)({\n  display: \"flex\",\n  flexDirection: \"row\"\n})\n\nconst BoardContainer = g(View)({\n  display: \"flex\",\n  flexDirection: \"column\"\n})\n\nconst Indicators = g(View)({\n  display: \"flex\",\n  flexDirection: \"row\"\n})\n\nexport default tetris\n","import React from \"react\"\nimport { View } from \"react-native\"\nimport Tetris from \"./scenes/tetris/components/Game\"\n\nconst IndexPage = () => (\n  <View>\n    <Tetris />\n  </View>\n)\n\nexport default IndexPage\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\n// tslint:disable\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}